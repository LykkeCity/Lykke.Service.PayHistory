// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.PayHistory.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for HistoryOperationType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum HistoryOperationType
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "Recharge")]
        Recharge,
        [EnumMember(Value = "OutgoingInvoicePayment")]
        OutgoingInvoicePayment,
        [EnumMember(Value = "IncomingInvoicePayment")]
        IncomingInvoicePayment,
        [EnumMember(Value = "OutgoingExchange")]
        OutgoingExchange,
        [EnumMember(Value = "IncomingExchange")]
        IncomingExchange,
        [EnumMember(Value = "Withdrawal")]
        Withdrawal,
        [EnumMember(Value = "CashOut")]
        CashOut
    }
    internal static class HistoryOperationTypeEnumExtension
    {
        internal static string ToSerializedValue(this HistoryOperationType? value)
        {
            return value == null ? null : ((HistoryOperationType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this HistoryOperationType value)
        {
            switch( value )
            {
                case HistoryOperationType.None:
                    return "None";
                case HistoryOperationType.Recharge:
                    return "Recharge";
                case HistoryOperationType.OutgoingInvoicePayment:
                    return "OutgoingInvoicePayment";
                case HistoryOperationType.IncomingInvoicePayment:
                    return "IncomingInvoicePayment";
                case HistoryOperationType.OutgoingExchange:
                    return "OutgoingExchange";
                case HistoryOperationType.IncomingExchange:
                    return "IncomingExchange";
                case HistoryOperationType.Withdrawal:
                    return "Withdrawal";
                case HistoryOperationType.CashOut:
                    return "CashOut";
            }
            return null;
        }

        internal static HistoryOperationType? ParseHistoryOperationType(this string value)
        {
            switch( value )
            {
                case "None":
                    return HistoryOperationType.None;
                case "Recharge":
                    return HistoryOperationType.Recharge;
                case "OutgoingInvoicePayment":
                    return HistoryOperationType.OutgoingInvoicePayment;
                case "IncomingInvoicePayment":
                    return HistoryOperationType.IncomingInvoicePayment;
                case "OutgoingExchange":
                    return HistoryOperationType.OutgoingExchange;
                case "IncomingExchange":
                    return HistoryOperationType.IncomingExchange;
                case "Withdrawal":
                    return HistoryOperationType.Withdrawal;
                case "CashOut":
                    return HistoryOperationType.CashOut;
            }
            return null;
        }
    }
}
